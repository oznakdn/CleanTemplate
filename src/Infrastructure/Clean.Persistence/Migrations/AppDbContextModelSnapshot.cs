// <auto-generated />
using System;
using Clean.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clean.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Clean.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Clean.Domain.Identities.Abstracts.RoleIdentity<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RoleIdentity<Guid>");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RoleIdentity<Guid>");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Clean.Domain.Identities.Abstracts.UserIdentity<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserIdentity<Guid>");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserIdentity<Guid>");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Clean.Domain.Identities.AppRole", b =>
                {
                    b.HasBaseType("Clean.Domain.Identities.Abstracts.RoleIdentity<System.Guid>");

                    b.HasDiscriminator().HasValue("AppRole");
                });

            modelBuilder.Entity("Clean.Domain.Identities.AppUser", b =>
                {
                    b.HasBaseType("Clean.Domain.Identities.Abstracts.UserIdentity<System.Guid>");

                    b.HasDiscriminator().HasValue("AppUser");
                });

            modelBuilder.Entity("Clean.Domain.Identities.Abstracts.UserIdentity<System.Guid>", b =>
                {
                    b.HasOne("Clean.Domain.Identities.Abstracts.RoleIdentity<System.Guid>", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Clean.Domain.Identities.Abstracts.RoleIdentity<System.Guid>", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
